{"version":3,"sources":["images/bg-desktop-dark.jpg","images/bg-desktop-light.jpg","components/BackgroundImage.js","store/actions.js","images/icon-sun.svg","images/icon-moon.svg","components/SwitchTheme.js","components/InputField.js","images/icon-cross.svg","components/List.js","components/HandlerEvent.js","components/ListContainer.js","components/TodoBox.js","App.js","store/reducers.js","reportWebVitals.js","index.js"],"names":["BackgroundImage","isDarked","className","src","darkImageDesktop","lightImageDesktop","alt","todoId","label","dispatch","type","payload","id","checked","console","log","SwitchTheme","rest","useDispatch","sun","moon","onClick","evt","actions","InputField","useState","input","setInput","useSelector","state","todoList","placeholder","onChange","target","value","onKeyDown","key","List","handleCheck","listItem","parentNode","document","querySelector","classList","contains","add","remove","handleDelete","RemoveBtn","dataId","bind","data-id","cross","Item","isCompleted","defaultChecked","length","map","todo","Counter","todoNumber","Status","Clear","HandlerEvent","ListContainer","TodoBox","props","connect","filter","item","toggleTheme","useEffect","html","initialTodo","action","newState","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c0e5f7f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","import darkImageDesktop from '../images/bg-desktop-dark.jpg';\r\nimport lightImageDesktop from '../images/bg-desktop-light.jpg';\r\n\r\nconst BackgroundImage = ({isDarked}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"imagebox w-full absolute top-0 left-0\">\r\n            <img src={isDarked ? darkImageDesktop : lightImageDesktop} alt=\"Background Image\" className=\"w-full\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackgroundImage;","let todoId = 0;\r\n\r\nconst addTodo = (label) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'ADD_TODO',\r\n            payload: {\r\n                id: ++todoId,\r\n                label: label\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst toggleTodo = (id, checked) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'TOGGLE_TODO',\r\n            payload: {\r\n                id: id,\r\n                checked: checked\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst toggleTheme = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'TOGGLE_THEME'\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteTodo = (id) => {\r\n    console.log('delete', id)\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'DELETE_TODO',\r\n            payload: {\r\n                id: id,\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    addTodo,\r\n    toggleTodo,\r\n    deleteTodo,\r\n    toggleTheme\r\n}","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import { useDispatch } from 'react-redux';\r\nimport actions from '../store/actions'\r\n\r\nimport sun from '../images/icon-sun.svg';\r\nimport moon from '../images/icon-moon.svg';\r\n\r\n\r\nconst SwitchTheme = ({isDarked, ...rest}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    function themeChange(evt) {\r\n        dispatch(actions.toggleTheme())\r\n    }\r\n\r\n    return (\r\n        <div {...rest}>\r\n            <img src={isDarked ? sun : moon} onClick={themeChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwitchTheme;","import { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useState } from 'react';\r\nimport actions from '../store/actions'\r\n\r\n\r\nconst InputField = ({...rest}) => {\r\n    const dispatch = useDispatch()\r\n    const [input, setInput] = useState('');\r\n    const {todoList} = useSelector(state => state.todoList)\r\n\r\n    function handleChange(evt) {\r\n        setInput(evt.target.value)\r\n    }\r\n\r\n    function handleKeyDown(evt) {\r\n        if(evt.key === 'Enter') {\r\n            dispatch(actions.addTodo(input))\r\n            evt.target.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div {...rest}>\r\n            <input type=\"text\" placeholder=\"Create a new todo...\" className=\"font-josefin w-full text-light-dgb dark:text-dark-dgb placeholder-light-lgb dark:placeholder-dark-dgb font-bold bg-light-vlg dark:bg-dark-vddb py-4 pl-16\" onChange={handleChange} onKeyDown={handleKeyDown} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputField;","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useState } from 'react';\r\n\r\nimport actions from '../store/actions'\r\nimport cross from '../images/icon-cross.svg'\r\n\r\nconst List = ({todoList}) => {\r\n    const dispatch = useDispatch()\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleCheck(evt) {\r\n        const listItem = evt.target.parentNode\r\n        \r\n\r\n        if( document.querySelector('html').classList.contains('dark') ) {\r\n            if( evt.target.checked ) {\r\n                listItem.querySelector('.label').classList.add('line-through', 'text-dark-vdgb')\r\n                listItem.querySelector('.label').classList.remove('text-dark-lgb')\r\n                listItem.parentNode.querySelector('button').classList.add('hidden')\r\n            } else {\r\n                listItem.querySelector('.label').classList.remove('line-through', 'text-dark-vdgb')\r\n                listItem.querySelector('.label').classList.add('text-dark-lgb')\r\n                listItem.parentNode.querySelector('button').classList.remove('hidden')\r\n            }\r\n        } else {\r\n            if( evt.target.checked ) {\r\n                listItem.querySelector('.label').classList.add('line-through')\r\n                listItem.parentNode.querySelector('button').classList.add('hidden')\r\n            } else {\r\n                listItem.querySelector('.label').classList.remove('line-through')\r\n                listItem.parentNode.querySelector('button').classList.remove('hidden')\r\n            }\r\n        }\r\n\r\n        dispatch(actions.toggleTodo(evt.target.id, evt.target.checked))\r\n\r\n    }\r\n\r\n    function handleDelete(id) {\r\n        dispatch(actions.deleteTodo(id))\r\n    }\r\n\r\n    function RemoveBtn({dataId}) {\r\n        return (\r\n            <button className=\"button-close flex-shrink\" onClick={handleDelete.bind(null, dataId)} data-id={dataId}>\r\n                <img src={cross} />\r\n            </button>\r\n        )\r\n    }\r\n\r\n    function Item({id, label, isCompleted}) {\r\n        return (\r\n            <li className=\"list-item w-full relative font-josefin w-full bg-light-vlg dark:bg-dark-vddb pr-6 text-left flex item-center border-light-vlg dark:border-dark-vdgb\">\r\n                \r\n                <label className=\"text-base flex-auto py-4 pl-16 cursor-pointer\">\r\n                    <span className={`label text-light-vdgb dark:text-dark-lgb text-lg font-josefin ${isCompleted && 'line-through'}`}>{label}</span>\r\n                    <input id={id} type=\"checkbox\" onChange={handleCheck} defaultChecked={isCompleted}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n\r\n                <RemoveBtn dataId={id} />\r\n            </li>\r\n        )\r\n    }\r\n\r\n    if( todoList.length !== 0 )\r\n\r\n        return  (\r\n            <ul>\r\n                {todoList.map(todo => {\r\n                    return <Item key={todo.id} id={todo.id} isCompleted={todo.isCompleted} label={todo.label} />\r\n                })}\r\n            </ul>\r\n        )\r\n\r\n    return <p className=\"text-dark-dgb font-josefin font-bold pt-5\">No Data Found.</p>\r\n}\r\n\r\nexport default List;","\r\nconst Counter = ({todoNumber, className}) => {\r\n    return  (\r\n        <span className={`text-light-lgb dark:text-dark-vdgb font-josefin text-sm font-bold ${className}`}>{todoNumber} items left</span>\r\n    )\r\n}\r\n\r\nconst Status = ({className}) => {\r\n    return (\r\n        <div className={`text-center ${className}`}>\r\n            <button className=\"font-josefin px-2.5 text-sm font-bold text-brightBlue\">All</button>\r\n            <button className=\" text-light-dgb dark:text-dark-dgb font-josefin px-2.5 text-sm font-bold\">Active</button>\r\n            <button className=\" text-light-dgb dark:text-dark-dgb font-josefin px-2.5 text-sm font-bold\">Completed</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Clear = ({className}) => {\r\n    return (\r\n        <button className=\" font-josefin text-light-lgb dark:text-dark-vdgb text-sm font-bold\">Clear Completed</button>\r\n    )\r\n}\r\n\r\nconst HandlerEvent = ({todoNumber}) => {\r\n    return (\r\n        <div className=\"w-full flex items-center py-4 px-5\">\r\n            <Counter className=\"justify-items-stretch\" todoNumber={todoNumber} />\r\n            <Status className=\"justify-items-stretch flex-auto\" />\r\n            <Clear className=\"justify-items-stretch\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HandlerEvent;","import List from './List';\r\nimport HandlerEvent from './HandlerEvent';\r\n\r\nconst ListContainer = ({todoNumber, todoList, ...rest}) => {\r\n    return (\r\n        <div {...rest}>\r\n            <List todoList={todoList}/>\r\n            <HandlerEvent todoNumber={todoNumber} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListContainer;","import SwitchTheme from './SwitchTheme';\r\nimport InputField from './InputField';\r\nimport ListContainer from './ListContainer';\r\n\r\nconst TodoBox = ({props}) => {\r\n    return(\r\n        <div className=\"w-2/5 px-5 m-auto relative pt-20\">\r\n            <div className=\"flex items-center w-full mb-10\">\r\n                <h1 className=\"text-white tracking-widestx3 font-josefin text-4xl text-left font-bold flex-auto\">TODO</h1>\r\n                <SwitchTheme className=\"flex-shrink\" isDarked={props.isDarked} />\r\n            </div>\r\n\r\n            <InputField className=\" circle-design relative w-full bg-light-vlg dark:bg-dark-vddb rounded overflow-hidden mb-8\" />\r\n\r\n            <ListContainer todoNumber={props.todoNumber} todoList={props.todoList} className=\"list-container relative w-full bg-light-vlg dark:bg-dark-vddb rounded overflow-hidden\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoBox;","import React, {useEffect} from 'react';\nimport BackgroundImage from './components/BackgroundImage';\nimport TodoBox from './components/TodoBox';\nimport { connect } from 'react-redux';\n\nimport actions from './store/actions'\nimport './App.css';\n\nfunction themeColor() {\n  const html = document.querySelector('html').classList\n  if(html.contains('dark')) html.remove('dark')\n  else html.add('dark')\n}\n\nfunction App(props) {\n\n  useEffect(() => {\n      const html = document.querySelector('html').classList\n      if(!props.isDarked) html.remove('dark')\n      else html.add('dark')\n\n  }, [props.isDarked])\n\n  return (\n  <div className=\"App bg-light-vlg h-screen dark:bg-dark-vdb\">\n      <BackgroundImage isDarked={props.isDarked} />\n      <TodoBox props={props} />\n  </div>\n  );\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        todoList: state.todoList,\n        todoNumber: state.todoList.filter(item => !item.isCompleted ).length,\n        isDarked: state.isDarked\n    }\n}\n\nconst mapDispatchToProps = function(dispatch) {\n    return {\n        toggleTheme : actions.toggleTheme()\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initialTodo = {\r\n    isDarked: true,\r\n    todoList: [\r\n        // {\r\n        //     id: 1,\r\n        //     label: 'initial',\r\n        //     isCompleted: false\r\n        // }\r\n    ]\r\n}\r\n\r\nconst todo = (state = initialTodo, action) => {\r\n    switch(action.type) {\r\n\r\n        case 'ADD_TODO' : {\r\n            const {id, label} = action.payload\r\n            return {\r\n                ...state,\r\n                todoList: [\r\n                    ...state.todoList,\r\n                    {\r\n                        id: id,\r\n                        label: label,\r\n                        isCompleted: false\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        case 'TOGGLE_TODO': {\r\n            const {id, checked} = action.payload\r\n            console.log('reducer', checked)\r\n            const newState = state.todoList.map((todo) => {\r\n                if(todo.id === parseInt(id)) {\r\n                    console.log('concolse', id);\r\n                    return { id: parseInt(id), label: todo.label, isCompleted: checked}\r\n                }\r\n                \r\n                return todo\r\n            })\r\n            console.log('test:', newState)\r\n            return {\r\n                ...state,\r\n                todoList: [\r\n                    ...newState\r\n                ]\r\n            }\r\n        }\r\n\r\n        case 'DELETE_TODO': {\r\n            const {id} = action.payload\r\n            const newState = state.todoList.filter( todo => todo.id !== parseInt(id) )\r\n            return {\r\n                ...state,\r\n                todoList: [\r\n                    ...newState\r\n                ]\r\n            }\r\n        }\r\n\r\n        case 'TOGGLE_THEME' : {\r\n            return {\r\n                ...state,\r\n                isDarked : !state.isDarked\r\n            }\r\n        }\r\n\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todo","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from './store/reducers';\nimport { Provider } from 'react-redux';\nimport thunk from \"redux-thunk\";\n\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk) );\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}